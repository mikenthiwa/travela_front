// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NewEmailTemplateForm> component should render correctly 1`] = `
<FormContext
  errors={Object {}}
  targetForm={
    NewEmailTemplateForm {
      "context": Object {},
      "defaultState": Object {
        "errors": Object {},
        "hasBlankFields": true,
        "optionalFields": Array [
          "cc",
        ],
        "values": Object {
          "cc": Array [],
          "from": "",
          "message": "",
          "name": "",
          "subject": "",
        },
      },
      "handleCancel": [Function],
      "handleSubmit": [Function],
      "hasErrors": [Function],
      "props": Object {
        "createReminderEmailTemplate": [Function],
        "data": Object {
          "cc": Array [
            "gitaumoses4@andela.com",
          ],
          "from": "moses.gitau@andela.com",
          "message": "This is the message",
          "name": "Reminder Template",
          "subject": "This is the subject",
        },
        "editing": false,
        "errors": Object {},
        "getAllUsersEmail": [Function],
        "getSingleReminderEmailTemplate": [Function],
        "getUsersEmail": Array [],
        "history": Object {
          "push": [Function],
        },
        "isSaving": false,
        "match": Object {
          "params": Object {},
        },
        "newEmailTemplate": Object {
          "errors": Object {},
        },
        "updateSingleReminderEmailTemplate": [Function],
        "updatedEmailTemplate": Object {},
      },
      "refs": Object {},
      "setState": [Function],
      "setUpdateData": [Function],
      "state": Object {
        "errors": Object {},
        "hasBlankFields": true,
        "optionalFields": Array [
          "cc",
        ],
        "values": Object {
          "cc": Array [],
          "from": "",
          "message": "",
          "name": "",
          "subject": "",
        },
      },
      "updater": Updater {
        "_callbacks": Array [],
        "_renderer": ReactShallowRenderer {
          "_context": Object {},
          "_element": <NewEmailTemplateForm
            createReminderEmailTemplate={[Function]}
            data={
                    Object {
                            "cc": Array [
                              "gitaumoses4@andela.com",
                            ],
                            "from": "moses.gitau@andela.com",
                            "message": "This is the message",
                            "name": "Reminder Template",
                            "subject": "This is the subject",
                          }
            }
            editing={false}
            errors={Object {}}
            getAllUsersEmail={[Function]}
            getSingleReminderEmailTemplate={[Function]}
            getUsersEmail={Array []}
            history={
                    Object {
                            "push": [Function],
                          }
            }
            isSaving={false}
            match={
                    Object {
                            "params": Object {},
                          }
            }
            newEmailTemplate={
                    Object {
                            "errors": Object {},
                          }
            }
            updateSingleReminderEmailTemplate={[Function]}
            updatedEmailTemplate={Object {}}
    />,
          "_forcedUpdate": false,
          "_instance": [Circular],
          "_newState": null,
          "_rendered": <FormContext
            errors={Object {}}
            targetForm={[Circular]}
            validatorName="validate"
            values={
                    Object {
                            "cc": Array [],
                            "from": "",
                            "message": "",
                            "name": "",
                            "subject": "",
                          }
            }
    >
            <form
                    className="new-email-template-form"
                    onSubmit={[Function]}
            >
                    <EmailTemplateDetails
                            emails={Array []}
                            values={
                                    Object {
                                            "cc": Array [],
                                            "from": "",
                                            "message": "",
                                            "name": "",
                                            "subject": "",
                                          }
                            }
                    />
                    <SubmitArea
                            hasBlankFields={true}
                            loading={false}
                            onCancel={[Function]}
                            selection=""
                            send="Save"
                    />
            </form>
    </FormContext>,
          "_rendering": false,
          "_updater": [Circular],
        },
      },
      "validate": [Function],
      Symbol(enzyme.__setState__): [Function],
    }
  }
  validatorName="validate"
  values={
    Object {
      "cc": Array [],
      "from": "",
      "message": "",
      "name": "",
      "subject": "",
    }
  }
>
  <form
    className="new-email-template-form"
    onSubmit={[Function]}
  >
    <EmailTemplateDetails
      emails={Array []}
      values={
        Object {
          "cc": Array [],
          "from": "",
          "message": "",
          "name": "",
          "subject": "",
        }
      }
    />
    <SubmitArea
      hasBlankFields={true}
      loading={false}
      onCancel={[Function]}
      selection=""
      send="Save"
    />
  </form>
</FormContext>
`;
