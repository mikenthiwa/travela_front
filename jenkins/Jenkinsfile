#!groovyâ€‹

pipeline {
agent {
  kubernetes {
    label 'travela-frontend'
    defaultContainer 'jnlp'
    yamlFile 'jenkins/agent.yaml'
}
  }

  environment {
    PROJECT_NAME = 'travela-frontend'
  }

  stages {
    stage('Load deployment environment variable file') {
      steps {
        container('travela-frontend-agent') {
          withCredentials([
            file(credentialsId: 'travela-deployment-env-vars', variable: 'DEPLOYMENT_ENV_VARS')
          ]) {
            load "$DEPLOYMENT_ENV_VARS"
          }
        }
      }
    }

    stage('Make all the scripts used in this build executable') {
      steps {
        container('travela-frontend-agent') {
          sh "chmod +x jenkins/scripts/*"
        }
      }
    }

    stage('Install dependencies') {
      steps {
        container('travela-frontend-agent') {
          sh "yarn install"
        }
      }
    }

    stage('Test and Report') {
      steps {
        container('travela-frontend-agent') {
          withCredentials([
            file(credentialsId: 'travela-frontend-env-vars', variable: 'ENV_FILE'),
            string(credentialsId: 'travela-frontend-codeclimate-id', variable: 'CC_TEST_REPORTER_ID')
          ]) {
            sh "jenkins/scripts/load_env_variables.sh test"
            sh "curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter"
            sh "chmod +x ./cc-test-reporter"
            sh "./cc-test-reporter before-build"
            sh "yarn test --coverage"
            sh "./cc-test-reporter after-build --exit-code \$?"
        }
        }
      }
    }

    stage('build') {
      steps {
        container('travela-frontend-agent') {
          sh "chmod +x jenkins/scripts/load_env_variables.sh"
          withCredentials([
            file(credentialsId: 'travela-frontend-env-vars', variable: 'ENV_FILE')
          ]) {
            sh "jenkins/scripts/load_env_variables.sh"
          }
          sh "yarn run build"
        }
      }
    }

    stage('Deploy') {
      when {
        anyOf {
          branch 'master'
          branch 'develop'
        }
      }
      steps {
        container('travela-frontend-agent') {
          sh "npm install -g rok8s-scripts"

          withCredentials([
            file(credentialsId: 'apprenticeship-projects-svc-acc', variable: 'GCLOUD_SERVICE_KEY'),
            string(credentialsId: 'SQL_SERVICE_ACCOUNT', variable: 'SQL_SERVICE_ACCOUNT'),
            string(credentialsId: 'travela-deployment-clone-branch', variable: 'CLONE_BRANCH')
          ]) {
            sh "jenkins/scripts/setup_k8s.sh main"
            sh "jenkins/scripts/build_deploy.sh main"
          }
        }
      }
    }

  }

  post {
    failure {
      container('travela-frontend-agent') {
        sh "jenkins/scripts/build_deploy.sh sendSlackDeployNotification fail"
      }
    }
  }
}
